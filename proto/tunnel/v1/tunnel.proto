syntax = "proto3";

package tunnel.v1;

import "google/protobuf/any.proto";

// Message 
enum MessageType {
    MESSAGE_TYPE_UNSPECIFIED = 0;

    MESSAGE_TYPE_CHECKIN = 1;
    MESSAGE_TYPE_CHECKIN_ACK = 2;

    MESSAGE_TYPE_FLOW = 101;
}

message MessageHeader {
    // Define the type of the message body.
    MessageType type = 1;
    // Arbitary key-values can be appended to metas.
    map<string, string> metas = 3;
}

message Message {
    // A common header.
    MessageHeader header = 1;
    // The body is any type, it should be serialized with another proto message, which depends on the `header.type`.
    google.protobuf.Any body = 2;
}

// CheckIn
message MessageCheckIn {
    // Client_id is the unique identify for every clients.
    string client_id = 1;
    // Token is used to verify a valid client, it should be fetched from API server which can authenticate the user.
    string token = 2;
}

message MessageCheckInAck {
    // 0 is success.
    int32 result = 1;
    string errmsg = 2;
}

// Flow
message Flow {
    // Raw bytes read from or write to tuntap device.
    bytes packet = 1;
}
